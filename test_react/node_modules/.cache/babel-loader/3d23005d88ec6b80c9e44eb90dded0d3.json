{"ast":null,"code":"var _jsxFileName = \"/nfs/ug/homes-3/p/patilabh/Desktop/Test_React/test_react/src/NodeList.js\";\nimport React from 'react';\nimport Node from './Node';\n\nconst NodeList = ({\n  num_nodes\n}) => {\n  // do computations here to get the centers of Node\n  // for now it just uses iterator i in the for loop\n  // MIGHT NEED RADIUS RETURNED FROM THIS FUNCTION\n\n  /*function coordinates(num_nodes){\n      var coords = [];\n      \tvar sizeOfWindow = Math.min(window.innerHeight,window.innerWidth);\n     \tvar centerX = sizeOfWindow/2;\n      var centerY = sizeOfWindow/2;\n      \tvar degreesInBetween = 360/num_nodes;\n     \tvar degree = 90;//start from 90\n     \tvar radius = 0.419*sizeOfWindow;\n     \tfor(var i = 0;i<num_nodes ;i++, degree+=degreesInBetween){\n         \tvar coordX = centerX + Math.cos(degree)*radius;\n         \tvar coordY = centerY + Math.sin(degree)*radius;\n         \tcoords.push({coordX,coordY});\n     \t}\n     \treturn coords;\n  }\n  \tvar serverCoords = coordinates(num_nodes);*/\n  const list = []; // hardcoded centers for 5 circles\n\n  var serverCoords = [{\n    coordX: 300,\n    coordY: 100\n  }, {\n    coordX: 500,\n    coordY: 100\n  }, {\n    coordX: 400,\n    coordY: 100\n  }, {\n    coordX: 200,\n    coordY: 100\n  }, {\n    coordX: 100,\n    coordY: 100\n  }];\n\n  for (var i = 0; i < num_nodes; i++) {\n    list.push(React.createElement(Node, {\n      key: i + 1,\n      centX: serverCoords[i].coordX,\n      centY: serverCoords[i].coordY,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    width: window.innerHeight,\n    height: window.innerHeight,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, list));\n};\n\nexport default NodeList;","map":{"version":3,"sources":["/nfs/ug/homes-3/p/patilabh/Desktop/Test_React/test_react/src/NodeList.js"],"names":["React","Node","NodeList","num_nodes","list","serverCoords","coordX","coordY","i","push","window","innerHeight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAEnC;AACA;AACA;;AACA;;;;;;;;;;;;;;;;AAmBA,QAAMC,IAAI,GAAG,EAAb,CAxBmC,CA0BnC;;AACA,MAAIC,YAAY,GAAG,CAAC;AAAEC,IAAAA,MAAM,EAAE,GAAV;AAAgBC,IAAAA,MAAM,EAAE;AAAxB,GAAD,EACd;AAAED,IAAAA,MAAM,EAAE,GAAV;AAAgBC,IAAAA,MAAM,EAAE;AAAxB,GADc,EAEd;AAAED,IAAAA,MAAM,EAAE,GAAV;AAAgBC,IAAAA,MAAM,EAAE;AAAxB,GAFc,EAGd;AAAED,IAAAA,MAAM,EAAE,GAAV;AAAgBC,IAAAA,MAAM,EAAE;AAAxB,GAHc,EAId;AAAED,IAAAA,MAAM,EAAE,GAAV;AAAgBC,IAAAA,MAAM,EAAE;AAAxB,GAJc,CAAnB;;AAOA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACL,SAAhB,EAA2BK,CAAC,EAA5B,EAAgC;AAC/BJ,IAAAA,IAAI,CAACK,IAAL,CAAU,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAED,CAAC,GAAC,CAAb;AACN,MAAA,KAAK,EAAIH,YAAY,CAACG,CAAD,CAAZ,CAAgBF,MADnB;AAEN,MAAA,KAAK,EAAID,YAAY,CAACG,CAAD,CAAZ,CAAgBD,MAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AAGA;;AAED,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,KAAK,EAAGG,MAAM,CAACC,WAApB;AAAiC,IAAA,MAAM,EAAGD,MAAM,CAACC,WAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACEP,IADF,CADD,CADD;AAOA,CA/CD;;AAiDA,eAAeF,QAAf","sourcesContent":["import React from 'react';\nimport Node from './Node';\n\nconst NodeList = ({ num_nodes }) => {\n\n\t// do computations here to get the centers of Node\n\t// for now it just uses iterator i in the for loop\n\t// MIGHT NEED RADIUS RETURNED FROM THIS FUNCTION\n\t/*function coordinates(num_nodes){\n\t    var coords = [];\n\n    \tvar sizeOfWindow = Math.min(window.innerHeight,window.innerWidth);\n    \tvar centerX = sizeOfWindow/2;\n\t    var centerY = sizeOfWindow/2;\n\n    \tvar degreesInBetween = 360/num_nodes;\n    \tvar degree = 90;//start from 90\n    \tvar radius = 0.419*sizeOfWindow;\n    \tfor(var i = 0;i<num_nodes ;i++, degree+=degreesInBetween){\n        \tvar coordX = centerX + Math.cos(degree)*radius;\n        \tvar coordY = centerY + Math.sin(degree)*radius;\n        \tcoords.push({coordX,coordY});\n    \t}\n    \treturn coords;\n\t}\n\n\tvar serverCoords = coordinates(num_nodes);*/\n\tconst list = []\n\n\t// hardcoded centers for 5 circles\n\tvar serverCoords = [{ coordX: 300 , coordY: 100 }, \n\t\t\t\t\t\t{ coordX: 500 , coordY: 100 },\n\t\t\t\t\t\t{ coordX: 400 , coordY: 100 },\n\t\t\t\t\t\t{ coordX: 200 , coordY: 100 },\n\t\t\t\t\t\t{ coordX: 100 , coordY: 100 }];\n\n\n\tfor (var i=0; i<num_nodes; i++) {\n\t\tlist.push(<Node key={i+1} \n\t\t\t\t\t\tcentX = {serverCoords[i].coordX} \n\t\t\t\t\t\tcentY = {serverCoords[i].coordY} />)\n\t}\n\n\treturn (\n\t\t<div>\t\t\t\n\t\t\t<svg width= {window.innerHeight} height= {window.innerHeight}>\n\t\t\t\t{list}\n    \t\t</svg>\n\t\t</div>\n\t);\n}\n\nexport default NodeList;\n\n"]},"metadata":{},"sourceType":"module"}