{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhis\\\\Desktop\\\\ECE496-Raft Consensus Visualization\\\\Test_React\\\\test_react\\\\src\\\\NodeList.js\";\nimport React from 'react';\nimport Node from './Node';\n\nconst NodeList = ({\n  num_nodes\n}) => {\n  // get window height and width (dont want to call window object multiple times)\n  var winHeight = window.innerHeight;\n  var winWidth = window.innerWidth;\n  var sizeOfWindow = Math.min(winHeight, winWidth); // set big circle properties\n\n  var centerX = sizeOfWindow / 1.5;\n  var centerY = sizeOfWindow / 3;\n  var radius = 150; // returns center coordinates for nodes given a specific number of nodes\n\n  function coordinates(num_nodes, cX, cY, rad) {\n    var coords = [];\n\n    for (var i = 0; i < num_nodes; i++) {\n      // multiplied with 1.5PI makes sure the first circle starts at highest point\n      var coordX = cX + Math.cos(2 * Math.PI * i / num_nodes + 1.5 * Math.PI) * rad;\n      var coordY = cY + Math.sin(2 * Math.PI * i / num_nodes + 1.5 * Math.PI) * rad;\n      coords.push({\n        coordX,\n        coordY\n      });\n    }\n\n    return coords;\n  }\n\n  var serverCoords = coordinates(num_nodes, centerX, centerY, radius); // a list of node tags that is returned fomr this NodeList function\n\n  const list = [];\n\n  for (var i = 0; i < num_nodes; i++) {\n    list.push(React.createElement(Node, {\n      key: i + 1,\n      centX: serverCoords[i].coordX,\n      centY: serverCoords[i].coordY,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    width: winHeight,\n    height: winWidth,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"circle\", {\n    cx: centerX,\n    cy: centerY,\n    r: radius,\n    fill: \"#eeeeee\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), list));\n};\n\nexport default NodeList;\n/*// hardcoded centers for 5 circles\r\nvar serverCoords = [{ coordX: 300 , coordY: 100 }, \r\n\t\t\t\t\t{ coordX: 500 , coordY: 100 },\r\n\t\t\t\t\t{ coordX: 400 , coordY: 100 },\r\n\t\t\t\t\t{ coordX: 200 , coordY: 100 },\r\n\t\t\t\t\t{ coordX: 100 , coordY: 100 }];*/","map":{"version":3,"sources":["C:\\Users\\abhis\\Desktop\\ECE496-Raft Consensus Visualization\\Test_React\\test_react\\src\\NodeList.js"],"names":["React","Node","NodeList","num_nodes","winHeight","window","innerHeight","winWidth","innerWidth","sizeOfWindow","Math","min","centerX","centerY","radius","coordinates","cX","cY","rad","coords","i","coordX","cos","PI","coordY","sin","push","serverCoords","list"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AACnC;AACA,MAAIC,SAAS,GAAGC,MAAM,CAACC,WAAvB;AACA,MAAIC,QAAQ,GAAGF,MAAM,CAACG,UAAtB;AACA,MAAIC,YAAY,GAAGC,IAAI,CAACC,GAAL,CAASP,SAAT,EAAoBG,QAApB,CAAnB,CAJmC,CAMnC;;AACA,MAAIK,OAAO,GAAGH,YAAY,GAAC,GAA3B;AACG,MAAII,OAAO,GAAGJ,YAAY,GAAC,CAA3B;AACA,MAAIK,MAAM,GAAG,GAAb,CATgC,CAWnC;;AACA,WAASC,WAAT,CAAqBZ,SAArB,EAAgCa,EAAhC,EAAoCC,EAApC,EAAwCC,GAAxC,EAA4C;AACxC,QAAIC,MAAM,GAAG,EAAb;;AAEA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAACjB,SAAjB,EAA6BiB,CAAC,EAA9B,EAAkC;AACrC;AACO,UAAIC,MAAM,GAAGL,EAAE,GAAGN,IAAI,CAACY,GAAL,CAAU,IAAIZ,IAAI,CAACa,EAAT,GAAcH,CAAd,GAAkBjB,SAAnB,GAAiC,MAAIO,IAAI,CAACa,EAAnD,IAAwDL,GAA1E;AACA,UAAIM,MAAM,GAAGP,EAAE,GAAGP,IAAI,CAACe,GAAL,CAAU,IAAIf,IAAI,CAACa,EAAT,GAAcH,CAAd,GAAkBjB,SAAnB,GAAiC,MAAIO,IAAI,CAACa,EAAnD,IAAwDL,GAA1E;AACAC,MAAAA,MAAM,CAACO,IAAP,CAAY;AAACL,QAAAA,MAAD;AAAQG,QAAAA;AAAR,OAAZ;AACH;;AACJ,WAAOL,MAAP;AACA;;AAED,MAAIQ,YAAY,GAAGZ,WAAW,CAACZ,SAAD,EAAYS,OAAZ,EAAqBC,OAArB,EAA8BC,MAA9B,CAA9B,CAxBmC,CAyBnC;;AACA,QAAMc,IAAI,GAAG,EAAb;;AACA,OAAK,IAAIR,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACjB,SAAhB,EAA2BiB,CAAC,EAA5B,EAAgC;AAC/BQ,IAAAA,IAAI,CAACF,IAAL,CAAU,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEN,CAAC,GAAC,CAAb;AACN,MAAA,KAAK,EAAIO,YAAY,CAACP,CAAD,CAAZ,CAAgBC,MADnB;AAEN,MAAA,KAAK,EAAIM,YAAY,CAACP,CAAD,CAAZ,CAAgBI,MAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AAGA;;AAED,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,KAAK,EAAGpB,SAAb;AAAwB,IAAA,MAAM,EAAGG,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAQ,IAAA,EAAE,EAAEK,OAAZ;AAAqB,IAAA,EAAE,EAAEC,OAAzB;AAAkC,IAAA,CAAC,EAAEC,MAArC;AAA6C,IAAA,IAAI,EAAC,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEEc,IAFF,CADD,CADD;AAQA,CAzCD;;AA2CA,eAAe1B,QAAf;AAGC","sourcesContent":["import React from 'react';\r\nimport Node from './Node';\r\n\r\nconst NodeList = ({ num_nodes }) => {\r\n\t// get window height and width (dont want to call window object multiple times)\r\n\tvar winHeight = window.innerHeight;\r\n\tvar winWidth = window.innerWidth;\r\n\tvar sizeOfWindow = Math.min(winHeight, winWidth);\r\n\r\n\t// set big circle properties\r\n\tvar centerX = sizeOfWindow/1.5;\r\n    var centerY = sizeOfWindow/3;\r\n    var radius = 150;\r\n\r\n\t// returns center coordinates for nodes given a specific number of nodes\r\n\tfunction coordinates(num_nodes, cX, cY, rad){\r\n\t    var coords = [];\r\n\r\n    \tfor(var i = 0; i<num_nodes ; i++) {\r\n\t\t// multiplied with 1.5PI makes sure the first circle starts at highest point\r\n        \tvar coordX = cX + Math.cos((2 * Math.PI * i / num_nodes) + (1.5*Math.PI))*rad;\r\n        \tvar coordY = cY + Math.sin((2 * Math.PI * i / num_nodes) + (1.5*Math.PI))*rad;\r\n        \tcoords.push({coordX,coordY});\r\n    \t}\r\n\t\treturn coords;\r\n\t}\r\n\r\n\tvar serverCoords = coordinates(num_nodes, centerX, centerY, radius);\r\n\t// a list of node tags that is returned fomr this NodeList function\r\n\tconst list = []\r\n\tfor (var i=0; i<num_nodes; i++) {\r\n\t\tlist.push(<Node key={i+1} \r\n\t\t\t\t\t\tcentX = {serverCoords[i].coordX} \r\n\t\t\t\t\t\tcentY = {serverCoords[i].coordY} />)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\t\t\t\r\n\t\t\t<svg width= {winHeight} height= {winWidth}>\r\n\t\t\t\t<circle cx={centerX} cy={centerY} r={radius} fill=\"#eeeeee\" />\r\n\t\t\t\t{list}\r\n    \t\t</svg>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default NodeList;\r\n\r\n\r\n\t/*// hardcoded centers for 5 circles\r\n\tvar serverCoords = [{ coordX: 300 , coordY: 100 }, \r\n\t\t\t\t\t\t{ coordX: 500 , coordY: 100 },\r\n\t\t\t\t\t\t{ coordX: 400 , coordY: 100 },\r\n\t\t\t\t\t\t{ coordX: 200 , coordY: 100 },\r\n\t\t\t\t\t\t{ coordX: 100 , coordY: 100 }];*/\r\n"]},"metadata":{},"sourceType":"module"}